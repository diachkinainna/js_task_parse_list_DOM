{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAaQ,EAOA,EApBF,EAAY,EAAG,SAAS,gBAAgB,CAAC,OAavC,EAAkB,EAVjB,AA0ByB,EA1Bf,GAAG,CAAC,SAAC,CAAtB,EAAoC,MAAA,CAClC,KAAM,EAAS,WAAW,CAAC,IAAI,GAC/B,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAS,OAAO,CAAC,MAAM,CAC/B,IAAK,EAAS,OAAO,CAAC,GAAG,CACzB,QAAS,CACX,C,IAIkC,IAAI,CAAC,SAAC,CAAA,CAAW,CAAnD,EACE,IAAM,EAAU,SAAS,EAAU,MAAM,CAAC,OAAO,CAAC,UAAW,IAAK,IAGlE,OAAO,AAFS,SAAS,EAAU,MAAM,CAAC,OAAO,CAAC,UAAW,IAAK,IAEjD,CACnB,GAIA,CAFM,EAAgB,SAAS,aAAa,CAAC,OAE/B,SAAS,CAAG,GAE1B,EAAgB,OAAO,CAAC,SAAC,CAAzB,EACE,EAAc,WAAW,CAAC,EAAS,OAAO,CAC5C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar elements = _to_consumable_array(document.querySelectorAll(\"li\"));\nfunction getEmployees(employees) {\n    return employees.map(function(employee) {\n        return {\n            name: employee.textContent.trim(),\n            position: employee.dataset.position,\n            salary: employee.dataset.salary,\n            age: employee.dataset.age,\n            element: employee\n        };\n    });\n}\nfunction sortList(list) {\n    var sortedEmployees = _to_consumable_array(list).sort(function(employee1, employee2) {\n        var salary1 = parseInt(employee1.salary.replace(/[^0-9]/g, \"\"), 10);\n        var salary2 = parseInt(employee2.salary.replace(/[^0-9]/g, \"\"), 10);\n        return salary2 - salary1;\n    });\n    var listContainer = document.querySelector(\"ul\");\n    listContainer.innerHTML = \"\";\n    sortedEmployees.forEach(function(employee) {\n        listContainer.appendChild(employee.element);\n    });\n}\nvar employeeList = getEmployees(elements);\nsortList(employeeList);\n\n//# sourceMappingURL=index.54dc6536.js.map\n","'use strict';\n\nconst elements = [...document.querySelectorAll('li')];\n\nfunction getEmployees(employees) {\n  return employees.map((employee) => ({\n    name: employee.textContent.trim(),\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n    element: employee,\n  }));\n}\n\nfunction sortList(list) {\n  const sortedEmployees = [...list].sort((employee1, employee2) => {\n    const salary1 = parseInt(employee1.salary.replace(/[^0-9]/g, ''), 10);\n    const salary2 = parseInt(employee2.salary.replace(/[^0-9]/g, ''), 10);\n\n    return salary2 - salary1;\n  });\n\n  const listContainer = document.querySelector('ul');\n\n  listContainer.innerHTML = '';\n\n  sortedEmployees.forEach((employee) => {\n    listContainer.appendChild(employee.element);\n  });\n}\n\nconst employeeList = getEmployees(elements);\n\nsortList(employeeList);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sortedEmployees","listContainer","elements","document","querySelectorAll","employees","map","employee","textContent","trim","position","dataset","salary","age","element","sort","employee1","employee2","salary1","parseInt","replace","salary2","querySelector","innerHTML","forEach","appendChild"],"version":3,"file":"index.54dc6536.js.map"}